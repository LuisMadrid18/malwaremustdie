/*
 * (C)opyright 2006 Nico Golde <nico@ngolde.de>
 * (C)opyright 2006 Andreas Krennmair <ak@synflood.at>
 * See LICENSE file for license details
 */

#ifndef HTTP_H
#define HTTP_H

#include <stdint.h>
#include "conn.h"
#include "url.h"

#define NOT_RELEVANT -1

enum {
	KEEPALIVE = 1 /** flag for send_head_request() */,
	FAKE_UA = 2 /** flag for send_head_request() */  
};

/**
 * Parses the HTTP response in the data buffer and returns
 * the response code.
 * @param buf the data buffer
 * @return the response code, or NOT_RELEVANT if parsing fails.
 */
int parse_http (char *buf);

/**
 * Sends a HEAD request.
 * @param conn the connection
 * @param url the URL from which the base path is taken
 * @param word the word the append to the base path
 * @param flags optional flags, bit-wise OR'ed.
 */
void send_head_request(conn_t * conn, url_t * url, char * word, unsigned long flags);

/**
 * Returns the value of an HTTP response header.
 * @param buf buffer that contains the HTTP response header.
 * @return a pointer to the value, or NULL is parsing failed.
 */
char * get_service (char *buf);

#endif
